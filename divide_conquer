\documentclass{article}
\author{Shixiang (Adam) Yang}

\date{September 16, 2022}
\title{Divide \& Conquer}
% \graphicspath{{./media/}}
\usepackage{algorithm}
\usepackage{algpseudocode}
\usepackage{amsfonts}
\usepackage{indentfirst}
\setlength\parindent{24pt}
\begin{document} \maketitle

\section{High level Idea}
    -take a problem instance I of size n
    
    - divide it into smaller instances I(1), I(2), ... , I(k)
    
    - solve each of the I(j) separately, resulting in SoL(j)
    
    - do some post processing work to produce a solution SoL from SoL(j)

    - if the input is small enough (smaller than some constant), solve it directly\\
    Most frequently, k = 2\\
    Often the sub-problems I(j) all have the same size, and are disjoint parts of the input, of size n/k
\subsection{Merge Sort example}
    \textbf{Merge Sort(a[], L, R)}
    \\- if R==L, then nothing to do
    \\- otherwise
        \begin{enumerate}
            \item let m = (R+L)/2, rounded down
            \item Merge Sort(a[], L,m);
            \item Merge Sort(a[], m+1,R);
            \item Merge(a[], L, m, R);
        \end{enumerate}
\subsection{prove that merge sort is correct}
    Correctness: The output is sorted
    and the array still contains the same elements as before.
    
    Input: Array a of n numbers
\end{document}
